---
title: "Publish and Share with Quarto :: Cheatsheet"
description: "QMD Edition"
image-alt: ""
engine: knitr
execute:
  eval: true
  output: false
  warning: false
code-overflow: wrap
---

::: column-margin
```{=html}
<img src="images/logo-quarto.png" height="138" alt="Hex logo for Quarto - a white circle segmented into quarters next to the text Quarto on a blue background." />
<br><br>
```
```{=html}
<p><i class="bi bi-file-pdf"></i>PDF Coming Soon...</p>
<br><br>
```
:::

## Overview

![](images/quarto-illustration.png){fig-alt="A schematic representing the multi-language input (e.g. Python, R, Observable, Julia) and multi-format output (e.g. PDF, html, Word documents, and more) versatility of Quarto."}[^credit] 

[^credit]: Artwork from "Hello, Quarto" keynote by Julia Lowndes and Mine Ã‡etinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by [Allison Horst](https://allisonhorst.com/allison-horst).

* **Author**: Write and code in plain text. Author documents as .qmd files, or Jupyter notebooks. Write in a rich Markdown syntax.

* **Render**: Generate documents, presentations and more. Produce HTML, PDF, MS Word, reveal.js, MS Powerpoint, Beamer, websites, blogs, books...

* **Share**: Share your work with the world. Quickly deploy to GitHub Pages, Netlify, Quarto Pub, Posit Cloud, or Posit Connect.

### Get Quarto

Get Quarto from: <https://quarto.org/docs/download/>

Or, use version **bundled with RStudio.**

### Get Started

<https://quarto.org/docs/get-started>

## Author

### Source File: hello.qmd

````{.markdown}
---
title: "Hello, Penguins"
format: html
execute:
  echo: false
---

## Meet the penguins

The `penguins` data contains size measurements for 
penguins from three islands in the Palmer Archipelago, 
Antarctica.

The three species of penguins have quite distinct 
distributions of physical dimensions (@fig-penguins).

```{{r}}
#| label: fig-penguins
#| fig-cap: "Dimensions of penguins across three species."
#| warning: false
library(tidyverse, quietly = TRUE)
library(palmerpenguins)
penguins |>
  ggplot(aes(x = flipper_length_mm, y = bill_length_mm)) +
  geom_point(aes(color = species)) +
  scale_color_manual(
    values = c("darkorange", "purple", "cyan4")) +
  theme_minimal()
```
````

### Highlights in the source file

*   Set format(s) and options. Use YAML Syntax.
    
    ```` markdown
    ---
    title: "Hello, Penguins"
    format: html
    execute:
      echo: false
    ---
    ````

*   `## Write with **Markdown**` 
    
    **RStudio**: Help > Markdown Quick Reference
    
    RStudio & VS Code: Use the **Visual Editor**

    ```` markdown
    ## Meet the penguins
    
    The `penguins` data contains size measurements for 
    penguins from three islands in the Palmer Archipelago, 
    Antarctica.
    
    The three species of penguins have quite distinct 
    distributions of physical dimensions (@fig-penguins).
    ````
    
*   Include code. R, Python, Julia, Observable, or any language with a Jupyter kernel.

    ````markdown
    ```{{r}}
    #| label: fig-penguins
    #| fig-cap: "Dimensions of penguins across three species."
    #| warning: false
    library(tidyverse, quietly = TRUE)
    library(palmerpenguins)
    penguins |>
      ggplot(aes(x = flipper_length_mm, y = bill_length_mm)) +
      geom_point(aes(color = species)) +
      scale_color_manual(
        values = c("darkorange", "purple", "cyan4")) +
      theme_minimal()
    ```
    ````

### Use a tool with a rich authoring experience

[RStudio](https://posit.co/products/open-source/rstudio/), or   
[Visual Studio Code](https://code.visualstudio.com/) + [Quarto extension](https://marketplace.visualstudio.com/items?itemName=quarto.quarto)

*   **Run** code cells as you write
*   **Render** with a button or keyboard shortcut
*   Edit Quarto documents with a **Visual Editor** 
    
    ![](images/quarto-visual-editor.png){fig-alt="Screenshot of the Visual Editor toolbar. Toolbar shows menu items: Normal with dropdown, bold, italics, code, bulleted list, numbered list, link, image, Format dropdown, Insert dropdown and Table dropdown."}
    
    -   Apply formatting in Visual Editor. Saved as Markdown in source.
    
    -   Insert elements like code cells, cross references, and more.

### Or any text editor

Quarto documents (.qmd) can be edited in any tool that edits text.

## Render

**Save,** then render to **preview** the document output. 

```{.bash filename="Terminal"}
quarto preview hello.qmd
```

RStudio & VS Code: Use **Render** button

The resulting HTML/PDF/MS Word/etc. document will be created and saved in the same directory as the source .qmd file.

### Rendered output: hello.html

![](images/quarto-rendered-output.png){fig-alt="Screenshot of a webpage with the title 'Hello, Penguins'. There is a subheading 'Meet the penguins' followed by a paragraph of text including a link to 'Figure 1', then a scatterplot."}

### Highlights in the rendered output

* Features for scientific publishing. Cross references, citations, equations, and more.

* Output integrated into document. Control how output appears with special comments in your code.

### Behind the Scenes

When you render a document, Quarto:

1.  Runs the code and embeds results and text into an .md file with:
    -   **Knitr**, if any `{r}` cells, or
    -   **Jupyter**, if any other cells.
    
2.  Converts the .md file into the output format with Pandoc.

## Publish

``` {.bash filename="Terminal"}
quarto publish {venue} hello.qmd
```

`{venue}`: quarto-pub, connect, gh-pages, netlify, confluence, (*v1.4*) posit-cloud

RStudio: Use **Publish** button ![](images/quarto-rstudio-publish.png){fig-alt="Publish button icon in RStudio" width="10%"}

-   [**Quarto Pub**](https://quartopub.com/) Free publishing service for Quarto content.

-   [**Posit Cloud**](https://posit.cloud/) Cloud-hosted, control access to project and output. ![](images/quarto-rstudio-publish.png){fig-alt="Push button publishing from RStudio" width="10%"}

-   [**Posit Connect**](https://posit.co/products/enterprise/connect/) Org-hosted, control access, schedule updates. ![](images/quarto-rstudio-publish.png){fig-alt="Push button publishing from RStudio" width="10%"}

## Quarto Projects

### Create websites, books and more

A directory of Quarto documents + a configuration file (`_quarto.yml`)

See examples at: <https://quarto.org/docs/gallery/>

Get started from the command line:

```{.bash filename="Terminal"}
quarto create project {type}
```

`{type}`: default, website, blog, book, confluence, (*v1.4*) manuscript

RStudio: Use **File** > **New Project**


## Include Code


## Embed Code

### Code Cells

Code cells start with ```` ```{r} ````, or ```` ```{python} ````, and end with ```` ``` ````.

Or use **Insert Code Chunk/Cell**.

::: {layout-ncol="2"}
```{{r}}
#| label: chunk-label
```

```{{python}}
#| label: chunk-label
```
:::

Can also use `{ojs}` or `{julia}`.

Add YAML code chunk options using `#|` comments inside the chunk.

### Execution Options

Set at the chunk level:

::: {layout-ncol="2"}
```{{r}}
#| echo: false
```

```{{python}}
#| echo: false
```
:::

Or globally in the YAML header with the `execute` option:

``` yaml
---
execute:
  echo: false
---
```

+-----------+-----------+----------------------------------------------------------+
| Option    | Default   | Effects                                                  |
+===========+===========+==========================================================+
| `echo`    | `true`    | `false`: hide code in output\                            |
|           |           | `fenced`: show code cell syntax along with code          |
+-----------+-----------+----------------------------------------------------------+
| `eval`    | `true`    | `false`: don't run code                                  |
+-----------+-----------+----------------------------------------------------------+
| `include` | `true`    | `false`: don't include code or results in output         |
+-----------+-----------+----------------------------------------------------------+
| `output`  | `true`    | `false`: don't include results\                          |
|           |           | `asis`: treat results as raw markdown                    |
+-----------+-----------+----------------------------------------------------------+
| `warning` | `true`    | `false`: don't include warnings in output                |
+-----------+-----------+----------------------------------------------------------+
| `error`   | `false`   | `true`: include error in output and continue with render |
+-----------+-----------+----------------------------------------------------------+

### Other Cell Options

Other options to control [figures](#figures), [tables](#tables), [layout](#layout).

Available options depend on engine:

-   Knitr: <https://quarto.org/docs/reference/cells/cells-knitr.html>
-   Jupyter: <https://quarto.org/docs/reference/cells/cells-jupyter.html>

### Inline Code

Use computed values directly in text sections. Code is evaluated at render and results appear as text.

::: {layout-ncol="3"}
<div>

#### Knitr

Two times two is `` `r knitr::inline_expr("2*2")` ``.

</div>

<div>

#### Jupyter

[Coming in Quarto v1.4]{.small .muted}

Two times two is `` `{python} 2*2` ``.

</div>

<div>

#### Output

Two times two is `r 2*2`.

</div>
:::

<!-- START CONTENT ELEMENTS -->

## Write With Markdown

RStudio: **Help** \> **Markdown Quick Reference**

<https://quarto.org/docs/authoring/markdown-basics.html>

Or use **Visual Editor**

## Figures {#figures}

### Markdown

``` markdown
![CAPTION](image.png){#fig-LABEL fig-alt="ALT TEXT"}
```

### Computation

```{{r}}
#| label: fig-LABEL
#| fig-cap: CAPTION
#| fig-alt: ALT TEXT
{{ plot code here }}
```

## Tables {#tables}

### Markdown

``` markdown
|object | radius|
|:------|------:|
|Sun    | 696000|
|Earth  |   6371|

: CAPTION {#tbl-LABEL}
```

### Computation

Output a markdown table or an HTML table (regardless of your format) from your code.

::: {layout-ncol="2"}
<div>

#### Knitr

Use `knitr::kable()` to produce markdown:

```{{r}}
#| label: tbl-LABEL
#| tbl-cap: CAPTION

knitr::kable(head(cars))
```

Also see the R packages: gt, flextable, kableExtra.

</div>

<div>

#### Jupyter

Combine `Markdown()` with a function that outputs markdown:

```{{python}}
#| label: tbl-LABEL
#| tbl-cap: CAPTION
from tabulate import tabulate
table = [["Sun","696,000",1.989e30],
         ["Earth","6,371",5.972e24]]
Markdown(tabulate(table, tablefmt='html'))
```

</div>
:::

<!-- Could include raw HTML syntax here too... -->

## Cross References

1.  Add labels:

    -   **Code cell:**

        ``` r
        #| label: prefix-LABEL
        ```

    -   **Markdown:** add attribute `#prefix-LABEL`

2.  Add references: `@prefix-LABEL`, e.g.

    ``` markdown
    You can see in @fig-scatterplot, that...
    ```

| `prefix` | Renders    |
|----------|------------|
| `fig-`   | Figure 1   |
| `tbl-`   | Table 1    |
| `eq-`    | Equation 1 |
| `sec-`   | Section 1  |

## Citations

1.  Add bibliography file to the YAML header:

    ``` yaml
    ---
    title: "My Document"
    bibliography: references.bib
    ---
    ```

2.  Add citations: `[@citation]`, or `@citation`

**Insert Citations** dialog in the Visual Editor:

-   Build your bibliography file from your Zotero library, DOI, Crossref, DataCite, or PubMed

-   Generate citation markdown syntax

## Callouts

``` markdown
::: {.callout-tip}
## Title

Text
:::
```

Instead of `tip` use one of: `note`, `caution`, `warning`, or `important`:

::: callout-tip
## tip
:::

::: callout-note
## note
:::

::: callout-caution
## caution
:::

::: callout-warning
## warning
:::

::: callout-important
## important
:::

## Shortcodes

Include the contents of `_file.qmd` in document:
``` {.markdown shortcodes=false}                                                             
{{< include _file.qmd >}} 
```                                   

Embed the code cell labelled `fig-LABEL` from the file `notebook.ipynb` in the document:
``` {.markdown shortcodes=false}                         
{{< embed notebook.ipynb#fig-LABEL >}}
```                                                                                                                                              

Embed a video in the document. Can also be a link to YouTube, or Vimeo:
``` {.markdown shortcodes=false}                                        
{{< video local-video.mp4 >}}
```                                                                                                                                              

Insert a format appropriate pagebreak:
``` {.markdown shortcodes=false}                                                                           
{{< pagebreak >}}
```                                                                                                                                              

Include the value of the option `title` set in the document metadata. Also see `var` and `env` shortcodes:
``` {.markdown shortcodes=false}       
{{< meta title >}}
```                                                                                                                                              


## Layout {#layout}

Use the `layout-ncol` and `layout-nrow` attributes to arrange content in a grid:

``` markdown
:::: {layout-ncol=2}
::: {}
Left 
:::
::: {}
Right
:::
::::
```

Use `layout` for more complicated arrangements:

``` markdown
:::: {layout="[[1, 1], [1]]"}
::: {}
Top Left 
:::
::: {}
Top Right
:::
::: {}
Bottom
:::
::::
```

Use `layout-ncol`, `layout-nrow`, `layout` as code chunk options.

<!-- END CONTENT ELEMENTS -->

## Set Output Formats and Their Options in YAML

Common values for `format`: html, pdf[^1], docx, odt, rtf, gfm, pptx, revealjs, beamer[^2]

[^1]: PDFs and Beamer slides require LaTeX, use:

    ``` {.bash filename="Terminal"}
    quarto install tinytex
    ```

[^2]: PDFs and Beamer slides require LaTeX, use:

    ``` {.bash filename="Terminal"}
    quarto install tinytex
    ```

::: {layout-ncol="3"}
<div>

### Single output, default options:

``` yaml
---
title: "My Document"
author: "Author Name"
format: html
---
```

</div>

<div>

### Single output, set options:

``` yaml
---
title: "My Document"
author: "Author Name"
format: 
  html: 
    code-fold: true
    toc: true
---
```

-   Indent format two spaces
-   Indent options four spaces

</div>

<div>

### Multiple outputs:

Use `quarto render` on command line or **Render All**

``` yaml
---
title: "My Document"
author: "Author Name"
toc: true
format: 
  html: 
    code-fold: true
  pdf: default
---
```

-   Top-level options apply to all formats

</div>
:::

### Output Options Table

```{r}
#| echo: false
#| output: true
#| tbl-cap: Important Options. The first column is the option name, the second column is the description and possible values, and then remaining columns show what file types each option can be applied to, and whether it can also be used as a code cell option.
library(readr)
library(dplyr)
library(gt)
format_options <- read_csv("data/format-options.csv")
format_options |> 
  group_by(Category) |> 
  gt() |>
  sub_missing(missing_text = "")
```

Visit <https://quarto.org/docs/reference/> to see all of a format's options

## Quarto Projects

A collection of Quarto documents and a configuration file, `_quarto.yml`

Websites, blogs, books, and more...

Get started from the command line:

``` {.bash filename="Terminal"}
quarto create project {type}
```

Or RStudio: New Project

`{type}`: website, blog, book, confluence

## Quarto Commands

Quarto is a command line tool. Run commands in the Terminal. Add `--help` to get more information.

+----------------------------------------------+-------------------------------------+
| The **Render** button is like:               | ``` bash                            |
|                                              | quarto preview document.qmd         |
|                                              | ```                                 |
+----------------------------------------------+-------------------------------------+
| Render all formats:                          | ``` bash                            |
|                                              | quarto render document.qmd          |
|                                              | ```                                 |
+----------------------------------------------+-------------------------------------+
| Render to a specific format:                 | ``` bash                            |
|                                              | quarto render document.qmd --to pdf |
|                                              | ```                                 |
+----------------------------------------------+-------------------------------------+
| Render a project:                            | ``` bash                            |
|                                              | quarto render                       |
|                                              | ```                                 |
+----------------------------------------------+-------------------------------------+
| Install tinytex, recommended for PDF output: | ``` bash                            |
|                                              | quarto install tinytex              |
|                                              | ```                                 |
+----------------------------------------------+-------------------------------------+
| Publish a document:                          | ``` bash                            |
|                                              | quarto publish {venue} document.qmd |
|                                              | ```                                 |
+----------------------------------------------+-------------------------------------+
| Publish a project:                           | ``` bash                            |
|                                              | quarto publish {venue}              |
|                                              | ```                                 |
+----------------------------------------------+-------------------------------------+
| Diagnostics on Quarto and rendering engines: | ``` bash                            |
|                                              | quarto check                        |
|                                              | ```                                 |
+----------------------------------------------+-------------------------------------+

## Parameters

Parameterize your documents to reuse with new inputs (e.g. data, values, etc.).

::: {layout-ncol="2"}
<div>

#### knitr

1.  **Add parameters** in the header as sub-values of `params`:

    ``` yaml
    ---
    params:
      state: "hawaii"
    ---
    ```

2.  **Call parameters** in code using `params$name`:

    ```{{r}}
    params$state
    ```

</div>

<div>

#### jupyter

1.  **Add parameters** to a code cell tagged `parameters`:

    ```` markdown
    ```{{python}}
    #| tags: [parameters]

    state = "hawaii"
    ```
    ````

2.  **Call parameters** in code:

    ```{{python}}
    state
    ```

</div>
:::

**Set parameters at render** with the `-P` option to `quarto render`

``` {.bash filename="Terminal"}
quarto render report.qmd -P state:"colorado"
```

## Interactivity?

## Extensions?

Shortcodes, Filters, Journal Article Templates

``` bash
quarto add
```

``` bash
quarto use
```

------------------------------------------------------------------------

CC BY SA Posit Software, PBC â€¢ [info\@posit.co](mailto:info@posit.co) â€¢ [posit.co](https://posit.co)

Learn more at [quarto.org](https://quarto.org).

Quarto 1.3

Updated: `r format(Sys.Date(), "%Y-%m")`.

------------------------------------------------------------------------
